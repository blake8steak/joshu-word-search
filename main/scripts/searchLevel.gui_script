local node1
local node2
local node1Row
local node1Col
local node2Row
local node2Col
local isValid
local countNum = 0
local wordBankArr = {"ナルト", "ルフィ", "ルルーシュヴィブリタニア", "ライト", "ボボボーボボーボボ", "アラジン", "ゴンフリークス", "コナン", "アレンウォーカー", "シロエ", "エドワードエルリック", "ピカチュウ"}

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	print("searchLevelInit")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	
	if action.pressed and gui.pick_node(gui.get_node("col0"), action.x, action.y) then
		print("col0")
		if action.pressed and gui.pick_node(gui.get_node("tile0-0"), action.x, action.y) then
			msg.post("/searchLevel#searchScript", "tile_selected", {col = 0, row = 0})
			-- print("tile0-0")
			-- if node1 == nil then
			-- 	-- This is the first node selected. Highlight this node, no need for checks.
			-- 	node1 = gui.get_node("tile0-0")
			-- 	node1Col = 0
			-- 	node1Row = 0
			-- 	print("node1 selected char: "..gui.get_text(gui.get_node("letter0")))
			-- elseif node1 == gui.get_node("tile0-0") then
			-- 	node1 = nil;
			-- else
			-- 	-- This is either node2, or if validity checks fail, will override node1.
			-- 	node2Col = 0
			-- 	node2Row = 0
			-- 	isValid = check_if_valid_node2(node1Col, node1Row, node2Col, node2Row)
			-- 	if isValid then
			-- 		node2 = gui.get_node("tile0-0")
			-- 		print("node2 selected char: "..gui.get_text(gui.get_node("letter0")))
			-- 		-- Highlight all letters in between
			-- 		-- Check if word exists in word bank
			-- 		-- Flash red and unhighlight if word does not exist
			-- 	else
			-- 		node1 = gui.get_node("tile0-0")
			-- 		node1Col = 0
			-- 		node1Row = 0
			-- 	end
			-- end
		end
		-- 0-1
		if action.pressed and gui.pick_node(gui.get_node("tile0-1"), action.x, action.y) then
			msg.post("/searchLevel#searchScript", "tile_selected", {col = 0, row = 1})
		end
	end

	if node1 ~= nil then
		if(gui.get_color(node1) == vmath.vector4(1, 1, 0, 1)) then
			gui.set_color(node1, vmath.vector4(1, 1, 1, 1))
		else
			gui.set_color(node1, vmath.vector4(1, 1, 0, 1))
		end
	end
	
	if action.pressed and gui.pick_node(gui.get_node("tile1-11"), action.x, action.y) then
		print("tile1-11")
	end
	if action.pressed and gui.pick_node(gui.get_node("leftArrow"), action.x, action.y) then
		countNum = countNum + 1
		print("Left arrow pressed: "..countNum)
	end
	if action.pressed and gui.pick_node(gui.get_node("rightArrow"), action.x, action.y) then
		print("Right arrow pressed")
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

-- Blake Methods Start Here --
function check_if_valid_node2(node1Col, node1Row, node2Col, node2Row)
	if node1Row == node2Row then
		return true
	elseif node1Col == node2Col then
		return true
	elseif math.abs(node1Row-node2Row) == math.abs(node1Col-node2Col) then
		return true
	else
		return false
	end
end
-- End Blake Methods --